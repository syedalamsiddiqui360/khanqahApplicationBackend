import Callback from '../../types/Callback';
import List from '../../data/list/List';
import Permission, { injectPrototypes, PermissionData } from '../../data/permissions/Permission';
import Resource from '../Resource';
export default class PermissionsResource extends Resource<PermissionData, Permission> {
    protected getResourceUrl(): string;
    protected injectPrototypes: typeof injectPrototypes;
    /**
     * All API actions through OAuth are by default protected for privacy and/or money related reasons and therefore
     * require specific permissions. These permissions can be requested by apps during the OAuth authorization flow. The
     * Permissions resource allows the app to check whether an API action is (still) allowed by the authorization.
     *
     * @since 3.2.0
     *
     * @see https://docs.mollie.com/reference/v2/permissions-api/get-permission
     */
    get(id: string): Promise<Permission>;
    get(id: string, callback: Callback<Permission>): void;
    /**
     * List all permissions available with the current app access token. The list is not paginated.
     *
     * @since 3.2.0
     *
     * @see https://docs.mollie.com/reference/v2/permissions-api/list-permissions
     */
    list(): Promise<List<Permission>>;
    list(callback: Callback<List<Permission>>): void;
}

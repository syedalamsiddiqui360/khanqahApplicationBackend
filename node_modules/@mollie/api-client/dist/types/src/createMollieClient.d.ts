import { AxiosRequestConfig } from 'axios';
import Xor from './types/Xor';
import ChargebacksResource from './resources/chargebacks/ChargebacksResource';
import CustomersMandatesResource from './resources/customers/mandates/CustomersMandatesResource';
import CustomersPaymentsResource from './resources/customers/payments/CustomersPaymentsResource';
import CustomersResource from './resources/customers/CustomersResource';
import CustomersSubscriptionsResource from './resources/customers/subscriptions/CustomersSubscriptionsResource';
import MethodsResource from './resources/methods/MethodsResource';
import OnboardingResource from './resources/onboarding/OnboardingResource';
import OrdersLinesResource from './resources/orders/orderlines/OrderLinesResource';
import OrdersPaymentsResource from './resources/payments/orders/OrdersPaymentsResource';
import OrdersRefundsResource from './resources/refunds/orders/OrdersRefundsResource';
import OrdersResource from './resources/orders/OrdersResource';
import OrdersShipmentsResource from './resources/orders/shipments/OrdersShipmentsResource';
import OrganizationsResource from './resources/organizations/OrganizationsResource';
import PaymentsCapturesResource from './resources/payments/captures/PaymentsCapturesResource';
import PaymentsChargebacksResource from './resources/payments/chargebacks/PaymentsChargebacksResource';
import PaymentsRefundsResource from './resources/payments/refunds/PaymentRefundsResource';
import PaymentsResource from './resources/payments/PaymentsResource';
import PermissionsResource from './resources/permissions/PermissionResource';
import ProfilesResource from './resources/profiles/ProfilesResource';
import RefundsResource from './resources/refunds/RefundsResource';
import SubscriptionsResource from './resources/subscriptions/SubscriptionsResource';
export declare type MollieOptions = AxiosRequestConfig & {
    /**
     * One or an array of version strings of the software you are using, such as `'RockenbergCommerce/3.1.12'`.
     */
    versionStrings?: string | string[];
} & Xor<{
    /**
     * The Mollie API key, starting with `'test_'` or `'live_'`.
     */
    apiKey: string;
}, {
    /**
     * OAuth access token, starting with `'access_''.
     */
    accessToken: string;
}>;
/**
 * Create Mollie client.
 * @since 2.0.0
 */
export default function createMollieClient(options: MollieOptions): {
    payments: PaymentsResource;
    methods: MethodsResource;
    payments_refunds: PaymentsRefundsResource;
    refunds: RefundsResource;
    payments_chargebacks: PaymentsChargebacksResource;
    chargebacks: ChargebacksResource;
    payments_captures: PaymentsCapturesResource;
    customers: CustomersResource;
    customers_payments: CustomersPaymentsResource;
    customers_mandates: CustomersMandatesResource;
    subscription: SubscriptionsResource;
    customers_subscriptions: CustomersSubscriptionsResource;
    orders: OrdersResource;
    orders_refunds: OrdersRefundsResource;
    orders_lines: OrdersLinesResource;
    orders_payments: OrdersPaymentsResource;
    orders_shipments: OrdersShipmentsResource;
    permissions: PermissionsResource;
    organizations: OrganizationsResource;
    profiles: ProfilesResource;
    onboarding: OnboardingResource;
};
export { createMollieClient };
export { ApiMode, Locale, PaymentMethod, HistoricPaymentMethod, SequenceType } from './data/global';
export { MandateMethod, MandateStatus } from './data/customers/mandates/data';
export { MethodImageSize, MethodInclude } from './data/methods/data';
export { OrderEmbed, OrderStatus } from './data/orders/data';
export { OrderLineType } from './data/orders/orderlines/OrderLine';
export { PaymentEmbed, PaymentStatus } from './data/payments/data';
export { RefundEmbed, RefundStatus } from './data/refunds/data';
export { SubscriptionStatus } from './data/subscription/data';

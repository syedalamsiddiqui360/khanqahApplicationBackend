import { Amount, Links, Url } from '../global';
import { PaymentData } from '../payments/data';
import Model from '../Model';
import Payment from '../payments/Payment';
import Seal from '../../types/Seal';
import commonHelpers from '../commonHelpers';
/**
 * Chargeback Response object.
 *
 * @param resource - Indicates the response contains a Chargeback object.
 *                   Will always contain `chargeback` for this endpoint.
 * @param id - The chargebackâ€™s unique identifier, for example `chb_n9z0tp`.
 * @param amount - The amount charged back by the consumer.
 * @param settlementAmount - This optional field will contain the amount that will be deducted from your account,
 *                           converted to the currency your account is settled in. It follows the same syntax as
 *                           the `amount` property. Note that for chargebacks, the `value` key of `settlementAmount`
 *                           will be negative. Any amounts not settled by Mollie will not be reflected in this amount,
 *                           e.g. PayPal chargebacks.
 * @param createdAt - The date and time the chargeback was issued, in ISO 8601 format.
 * @param reversedAt - The date and time the chargeback was reversed if applicable, in ISO 8601 format.
 * @param paymentId - The unique identifier of the payment this chargeback was issued for. For example: `tr_7UhSN1zuXS`.
 *                    The full payment object can be retrieved via the `payment` URL in the `_links` object.
 * @param _links - An object with several URL objects relevant to the chargeback.
 *
 * @see https://docs.mollie.com/reference/v2/chargebacks-api/get-chargeback
 */
export interface ChargebackData extends Model<'chargeback'> {
    amount: Amount;
    settlementAmount: Amount;
    createdAt: string;
    reversedAt: string;
    paymentId: string;
    _embedded?: {
        payments?: Omit<PaymentData, '_embedded'>[];
    };
    _links: ChargebackLinks;
}
declare type Chargeback = Seal<ChargebackData & {
    _embedded?: {
        payments?: Omit<Payment, '_embedded'>[];
    };
}, typeof commonHelpers>;
export default Chargeback;
/**
 * Chargebacks _links object
 *
 * @param payment - The API resource URL of the payment this chargeback belongs to.
 * @param settlement - The API resource URL of the settlement this payment has been settled with. Not present if not
 *                     yet settled.
 */
export interface ChargebackLinks extends Links {
    payment: Url;
    settlement?: Url;
}
export declare enum ChargebackEmbed {
    payment = "payment"
}
export declare function injectPrototypes(input: ChargebackData): Chargeback;
